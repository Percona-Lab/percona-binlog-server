*** Resetting replication at the very beginning of the test.
RESET MASTER;

*** Generating a configuration file in JSON format for the Binlog
*** Server utility.

*** Determining binlog file directory from the server.

*** Creating a temporary directory <BINSRV_STORAGE_PATH> for storing
*** binlog files downloaded via the Binlog Server utility.

*** Starting Binlog Server Utility in background in pull mode
include/read_file_to_var.inc

*** Determining the first fresh binary log name.

*** Creating a simple table and filling it with some data.
CREATE TABLE t1(id INT UNSIGNED NOT NULL AUTO_INCREMENT, PRIMARY KEY(id)) ENGINE=InnoDB;
INSERT INTO t1 VALUES(DEFAULT);

*** Restarting the server with a pause to test for the STOP event in
*** the binary log and reconnection logic.
# restart

*** Determining the second binary log name.

*** Filling the table with some more data.
INSERT INTO t1 VALUES(DEFAULT);

*** Killing the server and restarting it after a pause to test for the
*** missing ROTATE / STOP event at the end of the binary log .
# Kill the server
# restart

*** Determining the third binary log name.

*** Filling the table with some more data again and dropping the table.
INSERT INTO t1 VALUES(DEFAULT);
DROP TABLE t1;

*** FLUSHING the binlog one more time to make sure that the third one
*** is no longer open.
FLUSH BINARY LOGS;

*** Determining the fourth binary log name.

*** Waiting till Binlog Server Utility starts processing the fourth
*** binary log.

*** Sending SIGTERM signal to the Binlog Server Utility and waiting for
*** the process to terminate

*** Comparing server and downloaded versions of the first binlog file

*** Comparing server and downloaded versions of the second binlog file

*** Comparing server and downloaded versions of the third binlog file

*** Removing the Binlog Server utility storage directory.

*** Removing the Binlog Server utility log file.

*** Removing the Binlog Server utility configuration file.
KILL CONNECTION <CONNECTION_ID>;
